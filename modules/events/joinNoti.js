module.exports.config = {
    name: "joinNoti",
    eventType: ["log:subscribe"],
    version: "2.1.0",
    credits: "Pcoder",
    description: "Th√¥ng b√°o khi bot ho·∫∑c ng∆∞·ªùi v√†o nh√≥m v·ªõi ·∫£nh/gif/video random",
    dependencies: {
        "fs-extra": "",
        "path": "",
        "pidusage": ""
    }
};

module.exports.onLoad = function () {
    const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
    const { join } = global.nodemodule["path"];

    const path = join(__dirname, "cache", "joinGif");
    if (!existsSync(path)) mkdirSync(path, { recursive: true });

    const randomPath = join(__dirname, "cache", "joinGif", "random");
    if (!existsSync(randomPath)) mkdirSync(randomPath, { recursive: true });
};

module.exports.run = async function({ api, event }) {
    const { join } = global.nodemodule["path"];
    const { threadID } = event;
    const fs = require("fs");
    const moment = require("moment-timezone");

    let ngay = moment.tz('Asia/Ho_Chi_Minh').format('D/MM/YYYY');
    let gio = moment.tz('Asia/Ho_Chi_Minh').format('HH:mm:ss');
    let thu = moment.tz('Asia/Ho_Chi_Minh').format('dddd');

    const thuTiengViet = {
        "Sunday": "ùóñùóµùòÇÃâ ùó°ùóµùóÆÃ£ÃÇùòÅ",
        "Monday": "ùóßùóµùòÇÃõÃÅ ùóõùóÆùó∂",
        "Tuesday": "ùóßùóµùòÇÃõÃÅ ùóïùóÆ",
        "Wednesday": "ùóßùóµùòÇÃõÃÅ ùóßùòÇÃõ",
        "Thursday": "ùóßùóµùòÇÃõÃÅ ùó°ùóÆÃÜùó∫",
        "Friday": "ùóßùóµùòÇÃõÃÅ ùó¶ùóÆÃÅùòÇ",
        "Saturday": "ùóßùóµùòÇÃõÃÅ ùóïùóÆÃâùòÜ"
    };
    thu = thuTiengViet[thu] || thu;

    if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
        api.changeNickname(`„Äé ${global.config.PREFIX} „Äè ‚™º ${global.config.BOTNAME || "BOT"} ü§ñ`, threadID, api.getCurrentUserID());
        await api.sendMessage("üîÑ | ƒêang th·ª±c hi·ªán k·∫øt n·ªëi...", threadID);
        await new Promise(resolve => setTimeout(resolve, 2000));

        return api.sendMessage({
            body: `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ü°\n‚ú® „Äé K·∫æT N·ªêI TH√ÄNH C√îNG „Äè ‚ú®\nüìú ùôªùô¥Ã£ÃÇùôΩùô∑: ‚ü™ .menu ‚ü´ ùöÉùöÅùô∞ ùô≤ùöÑÃõÃÅùöÑ ùô≥ùô∞ùôΩùô∑ ùöÇùô∞ÃÅùô≤ùô∑ ùôªùô¥Ã£ÃÇùôΩùô∑!‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ü°\nBOT ƒê∆Ø·ª¢C ƒêI·ªÄU H√ÄNH B·ªûI: fb.com/phtrungkien.it`,
            attachment: global.khanhdayr.splice(0, 1)
        }, threadID);
    } 

    else {
        try {
            const { createReadStream, existsSync, readdirSync } = global.nodemodule["fs-extra"];
            let { threadName, participantIDs } = await api.getThreadInfo(threadID);
            const threadData = global.data.threadData.get(parseInt(threadID)) || {};

            const pathGif = join(__dirname, "cache", "joinGif", `${threadID}.gif`);
            const randomPath = readdirSync(join(__dirname, "cache", "joinGif", "random"));

            let mentions = [], nameArray = [], memLength = [], i = 0;
            for (let id in event.logMessageData.addedParticipants) {
                const userName = event.logMessageData.addedParticipants[id].fullName;
                nameArray.push(userName);
                mentions.push({ tag: userName, id });
                memLength.push(participantIDs.length - i++);
            }
            memLength.sort((a, b) => a - b);

            let msg = (typeof threadData.customJoin == "undefined") 
                ? `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù∞ ‚òÖ ‚ù±‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ\nüåü „Äé ùóñùóµùóÆÃÄùóº ùó∫ùòÇÃõÃÄùóªùó¥ „Äè\nüëë {name} „Äé ùôπùôæùô∏ùôΩ ùô∂ùöÅùôæùöÑùôø „Äè\nüìÖ „Äé {thu}, {ngay} „Äèüïí „Äé {gio} „Äè\nüë• „Äé ùó°ùóµùóºÃÅùó∫: {threadName} „Äè\nüí† „Äé {type} ùóπùóÆÃÄ ùòÅùóµùóÆÃÄùóªùóµ ùòÉùó∂ùó≤ÃÇùóª ùòÅùóµùòÇÃõÃÅ {soThanhVien} „Äè\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ù∞ ‚òÖ ‚ù±‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`
                : threadData.customJoin;

            msg = msg
                .replace(/\{name}/g, nameArray.join(', '))
                .replace(/\{type}/g, (memLength.length > 1) ? "C√°c b·∫°n" : "B·∫°n")
                .replace(/\{soThanhVien}/g, memLength.join(', '))
                .replace(/\{threadName}/g, threadName)
                .replace(/\{thu}/g, thu)
                .replace(/\{ngay}/g, ngay)
                .replace(/\{gio}/g, gio);

            let formPush;
            if (existsSync(pathGif)) {
                formPush = { body: msg, attachment: createReadStream(pathGif), mentions };
            } else if (randomPath.length != 0) {
                const pathRandom = join(__dirname, "cache", "joinGif", "random", randomPath[Math.floor(Math.random() * randomPath.length)]);
                formPush = { body: msg, attachment: createReadStream(pathRandom), mentions };
            } else {
                formPush = { body: msg, attachment: global.khanhdayr.splice(0, 1), mentions };
            }

            return api.sendMessage(formPush, threadID);
        } catch (e) { 
            console.log(e);
            api.sendMessage("‚ö† | ƒê√£ x·∫£y ra l·ªói khi g·ª≠i th√¥ng b√°o ch√†o m·ª´ng!", threadID);
        }
    }
};
